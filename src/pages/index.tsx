import { wrapper } from '@/app/store/store'
import {
  getComedy,
  getFamily,
  getFantasy,
  getGenres,
  getNowPlaying,
  getPopular,
  getRunningQueriesThunk,
  getTopRating,
  getUpComing,
  useGetComedyQuery,
  useGetFamilyQuery,
  useGetFantasyQuery,
  useGetNowPlayingQuery,
  useGetTopRatingQuery,
  useGetUpComingQuery,
} from '@/features/movies/api/movie-api'
import { Genres } from '@/features/movies/ui/Genres/Genres'
import { MovieList } from '@/features/movies/ui/MovieList/MovieList'
import { NewMovie } from '@/features/movies/ui/NewMovie/NewMovie'
import { Page } from '@/shared/types/layout'
import { HeadDescription } from '@/widgets/head/HeadDescription'
import Layout from '@/widgets/layout/ui/layout'

export const getServerSideProps = wrapper.getServerSideProps(store => async context => {
  store.dispatch(getPopular.initiate())
  store.dispatch(getGenres.initiate())
  store.dispatch(getTopRating.initiate())
  store.dispatch(getNowPlaying.initiate())
  store.dispatch(getUpComing.initiate())
  store.dispatch(getComedy.initiate())
  store.dispatch(getFamily.initiate())
  store.dispatch(getFantasy.initiate())

  await Promise.all(store.dispatch(getRunningQueriesThunk()))

  return {
    props: {},
  }
})

const Home: Page = () => {
  const { data: fantasy } = useGetFantasyQuery()
  const { data: nowPlaying } = useGetNowPlayingQuery()
  const { data: upComing } = useGetUpComingQuery()
  const { data: comedy } = useGetComedyQuery()
  const { data: family } = useGetFamilyQuery()

  return (
    <>
      <HeadDescription content={'Generated by create next app'} name={'description'} />
      <NewMovie />
      <Genres />
      <MovieList data={comedy} title={'Комедийные фильмы'} />
      <MovieList data={nowPlaying} title={'Новые фильмы'} />
      <MovieList data={family} title={'Смотрим всей семьей'} />
      <MovieList data={upComing} title={'Скоро выйдут'} />
      <MovieList data={fantasy} title={'Фантастика'} />
    </>
  )
}

Home.getLayout = page => <Layout>{page}</Layout>

export default Home
